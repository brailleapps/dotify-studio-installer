plugins {
  id "de.inetsoftware.setupbuilder" version "1.8.0"
}

apply plugin: 'base'

def resourceDir = 'ant-build/resources'
def tempDir = 'build/tmp'

def artifactName = "dotify-studio"
def appBase = "${tempDir}/dotify-studio"

configurations {
	app
	appPlugins
}

repositories {
    mavenCentral()
    //mavenLocal()
    maven { url "https://oss.sonatype.org/content/groups/staging" }
    //maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	app ("org.daisy.dotify:$artifactName:$version@zip") {
		transitive false
	}
}

task unzip(type: Copy, description: 'Unzips the distribution to a temporary folder.') {
    from zipTree(file(configurations.app.iterator().next()))
    into file("${tempDir}")
    eachFile {details ->
		def targetPath = modifyPath(details.path)
		details.path = targetPath
	}
}

task copyPlugins(type: Copy, dependsOn: 'unzip', description: 'Copies additional jars to the plugins folder (requires editing of build.gradle)') {
	from configurations.appPlugins
	into file("${appBase}/lib/plugins")
}

def modifyPath(def path) {
	def modified=path.replaceAll('\\Adotify-studio[^/]*(.+)', {"dotify-studio${it[1]}"})
	println modified
	return modified
}

task copyIcon(type: Copy, dependsOn: 'unzip', description: 'Copies file icon to distribution.') {
	from ("${resourceDir}") {
		include 'favicon.ico'
	} 
	into ("${appBase}")
}

task deleteBin(type: Delete, dependsOn: 'unzip', description: 'Removes the bin folder from the distribution.') {
	delete "${appBase}/bin"
}

setupBuilder {
    vendor = 'DAISY Consortium'
    application = releaseName
    appIdentifier = artifactName
    description = 'Creates, manages and embosses PEF-files'
    mainJar = "lib/${artifactName}-${version}.jar"
    mainClass = 'application.MainFx'
    //licenseFile = 'license.txt'
    // icons in different sizes for different usage. you can also use a single *.ico or *.icns file
	icons = ['ant-build/resources/app-icon.ico']
    // files for all platforms
    from ("${appBase}") {
        include '**/*'
    }
	desktopStarter {
        displayName = releaseName
        description = "Creates, manages and embosses PEF-files"
    }   
    failOnEmptyFrom=true
}

configure( [msi] ) {
    doFirst {
        setupBuilder {
		    desktopStarter {
		        executable = "dotify-studio.exe"
		        location = "ApplicationMenu"
		    }            
        }
    }
}

configure( [deb, rpm] ) {
    doFirst {
        setupBuilder {
		    desktopStarter {
		        executable = "bin/dotify-studio"
		        location = "ApplicationMenu"
				categories = "Office"
		    }
        }
    }
}

msi.dependsOn('unzip', 'deleteBin', 'copyIcon', 'copyPlugins')
dmg.dependsOn('unzip', 'copyPlugins')
deb.dependsOn('unzip', 'copyPlugins')
rpm.dependsOn('unzip', 'copyPlugins')

msi {
    // included to reduce the build time
    languages = ['en-US']
    wxsTemplate = './ant-build/resources/template.wxs'
    launch4j {
		mainJar = "lib/${artifactName}-${version}.jar"
		mainClass = 'application.MainFx'
		executable = 'dotify-studio.exe'
    }
}

deb {
    maintainerEmail = 'joel.hakansson@mtm.se'
    postinst = 'chmod +x /usr/share/dotify-studio/bin/dotify-studio'
}

rpm {
    postinst = 'chmod +x /usr/share/dotify-studio/bin/dotify-studio'
}


task wrapper(type: Wrapper, description: 'Refreshes the gradle wrapper') {
    gradleVersion = '3.0'
}